apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "${rootProject.getRootDir().getAbsolutePath()}/script/testlib.gradle"


def srcDirs = [
//        "carousel",
//        "video",
//        "colorpicker",
//        "drawable",
//        "animationsExprimental",
//        "newLayoutExprimental",
//        "scrollExprimental",

]
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.excludes = [
                    '**/build/**',
            ]
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/main/assets"
                aidl.srcDirs += "$projectDir/$it/main/aidl"
                res.srcDirs += "$projectDir/$it/main/res"
                java.srcDirs += "$projectDir/$it/main/java"
            }
        }
        androidTest {
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/androidTest/assets"
                aidl.srcDirs += "$projectDir/$it/androidTest/aidl"
                res.srcDirs += "$projectDir/$it/androidTest/res"
                java.srcDirs += "$projectDir/$it/androidTest/java"
            }
        }
        test {
            srcDirs.forEach {
                java.srcDirs += "$projectDir/$it/test/java"
            }

        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':framework::common')
    /**
     * ===============================av start=============================
     */
    api 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    api 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
    //Other ABIs: optional
    api 'com.github.ctiao:ndkbitmap-armv5:0.9.21'
//    api 'com.github.ctiao:ndkbitmap-x86:0.9.21'

    // required, enough for most devices.
    api 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    api 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    //Other ABIs: optional
    api 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
    api 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
//    api 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
//    api 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'

    //ExoPlayer as IMediaPlayer: optional, experimental
    api 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'

//    implementation 'com.google.android.exoplayer:exoplayer:+'
//    implementation 'com.google.android.exoplayer:exoplayer-core:+'
//    implementation 'com.google.android.exoplayer:exoplayer-dash:+'
//    implementation 'com.google.android.exoplayer:exoplayer-ui:+'

    /**
     * ===============================av end=============================
     */
}
