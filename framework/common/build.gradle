//noinspection GradleDynamicVersion
//apply plugin: 'foundation-module'
apply from: "${rootDir.path}/script/foundation_module.gradle"
android {
    defaultConfig {
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"
                cppFlags "-std=c++14", "-fexceptions", "-frtti"
                cFlags "-D__STDC_FORMAT_MACROS"
//                cppFlags "-std=gnu++11"
//                targets "hawks","hotfix"
                abiFilters "arm64-v8a", "armeabi-v7a" /*,"x86","x86_64"*/   //输出制定三种abi体系结构下的so库
            }

        }

    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            //path 'src/main/cpp/CMakeLists.txt'
        }
    }

//    packagingOptions {
//        pickFirst 'lib/armeabi-v7a/libhotfix.so'
//        pickFirst 'lib/armeabi-v7a/libhawks.so'
////        pickFirst 'lib/arm64-v8a/libRSSupport.so'
////        pickFirst 'lib/x86_64/libRSSupport.so'
//        pickFirst 'lib/x86/libhotfix.so'
//        pickFirst 'lib/x86/libhawks.so'
////        pickFirst 'lib/mips/libRSSupport.so'
//    }
    def srcDirs = [
            "async",
            "serialization",
    ]
    sourceSets {
        main {
            java.excludes = [
                    '**/build/**',
            ]
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/main/assets"
                aidl.srcDirs += "$projectDir/$it/main/aidl"
                res.srcDirs += "$projectDir/$it/main/res-frame-animation"
                res.srcDirs += "$projectDir/$it/main/res"
                java.srcDirs += "$projectDir/$it/main/java"

//                    assets.srcDirs += "$projectDir/src/inhouse/assets"
//                    aidl.srcDirs += "$projectDir/src/inhouse/aidl"
//                    res.srcDirs += "$projectDir/src/inhouse/res"
//                    java.srcDirs += "$projectDir/src/inhouse/java"
            }
        }
        androidTest {
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/androidTest/assets"
                aidl.srcDirs += "$projectDir/$it/androidTest/aidl"
                res.srcDirs += "$projectDir/$it/androidTest/res"
                java.srcDirs += "$projectDir/$it/androidTest/java"

            }
        }
        test {
            srcDirs.forEach {
                java.srcDirs += "$projectDir/$it/test/java"
            }

        }
    }
}
dependencies {
    api "androidx.activity:activity-ktx:1.2.3"
    api 'androidx.fragment:fragment-ktx:1.3.5'
    api "androidx.activity:activity:1.2.3"
    api 'androidx.core:core-ktx:1.5.0'
    api "com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0"
    api "com.blankj:utilcode:1.24.2"
    api 'joda-time:joda-time:2.10.2'
    api 'com.googlecode.libphonenumber:libphonenumber:8.2.0'
//    api "org.jetbrains.kotlin:kotlin-stdlibc-jdk7:1.3.50"
//    api "org.jetbrains.kotlin:kotlin-stdlib-jre8"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.10"
//    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.60-eap-25"

//    debugApi 'me.ele:uetool:1.0.17'
//    releaseApi 'me.ele:uetool-no-op:1.0.17'
    // if you want to show more attrs a bout Fresco's DraweeView
//    debugApi 'me.ele:uetool-fresco:1.0.17'
    api "com.squareup.okio:okio:2.9.0"
    api "androidx.appcompat:appcompat:1.3.0"
    api 'com.jakewharton:disklrucache:2.0.2'
    /**
     * ===============================async start================================
     */
//    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    api "org.jetbrains.anko:anko-coroutines:0.10.8"
    api "io.reactivex.rxjava2:rxkotlin:2.3.0"
    api "io.reactivex.rxjava2:rxjava:2.2.18"
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    api "io.reactivex.rxjava3:rxjava:3.0.7"

    /**
     * ===============================async end================================
     */
    /**
     * ===============================serialization start================================
     */
    api "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1"
    annotationProcessor 'org.parceler:parceler:1.1.12'
    api 'org.parceler:parceler-api:1.1.12'

    //》》》》》》》》json
    //api 'com.google.code.gson:gson:2.8.2'
    api 'com.alibaba:fastjson:1.2.54'
    api("com.squareup.moshi:moshi:1.9.2")
    api 'com.squareup.moshi:moshi-adapters:1.8.0'
    api("com.squareup.moshi:moshi-kotlin:1.8.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.8.0")

    //》》》》》》protobuf
    //api 'com.google.protobuf:protobuf-lite:3.0.1'
    /**
     * ===============================serialization end================================
     */


    /**
     * ===============================mvvm start================================
     */

    // Lifecycles only (no ViewModel or LiveData)
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
//    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    api 'androidx.lifecycle:lifecycle-common-java8:2.3.1'
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    //If you use Java 8 Language, then observe events with DefaultLifecycleObserver
//    api 'androidx.lifecycle:lifecycle-common-java8:2.1.0-alpha03'
//    api 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
//
//// If you want to bind to Android-specific lifecycles
//    api 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'
//
//// If you want pre-written Activities and Fragments you can subclass as providers
//    api 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'
//
//// If you want pre-written support preference Fragments you can subclass as providers
//    api 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.0.0'
//
//// If you want to use Android Lifecycle for providers
//    api 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.0.0'
//
// If you want to use Kotlin syntax
//    api 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.0.0'
// If you want to use Kotlin syntax with Android Lifecycle
//    api 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.0.0'

    /**
     * ===============================mvvm end================================
     */

    /**
     * ===============================decoupling start================================
     */
    api 'org.greenrobot:eventbus:3.1.1'
    // Dagger dependencies
    api "com.google.dagger:dagger:2.35.1"
    api "com.google.dagger:dagger-android:2.35.1"
    api "com.google.dagger:dagger-android-support:2.16"
    /**
     * ===============================decoupling  end================================
     */


    /**
     * ===============================monitor start=============================
     */
    api "com.orhanobut:logger:${rootProject.ext.loggerVersion}"
    api 'com.jakewharton.timber:timber:4.7.1'

    api platform('com.google.firebase:firebase-bom:28.0.1')
    api 'com.google.firebase:firebase-perf'
    api 'com.google.firebase:firebase-perf-ktx'
    api 'com.google.firebase:firebase-crashlytics'
    api 'com.google.firebase:firebase-crashlytics-ndk'
    api 'com.google.firebase:firebase-analytics'

    api 'com.facebook.stetho:stetho:1.5.1'
    api 'com.facebook.stetho:stetho-js-rhino:1.5.1'

//    debugImplementation project(path: ':lint-checker')
//    lintPublish project(path: ':lint-rules')
    /**
     * ===============================monitor end=============================
     */

    /**
     * ===============================ui start=============================
     */
//    api "androidx.compose.ui:ui:1.0.1"
//    api "androidx.compose.material:material:1.0.1"
//    api "androidx.compose.ui:ui-tooling:1.0.1"
//    api 'androidx.activity:activity-compose:1.3.1'
    api "androidx.compose.compiler:compiler:1.0.0-beta08"
//    androidTestApi "androidx.compose.ui:ui-test-junit4:1.0.1"
    api 'androidx.compose.ui:ui:1.0.0-rc02'
    // Tooling support (Previews, etc.)
    api 'androidx.compose.ui:ui-tooling:1.0.0-rc02'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    api 'androidx.compose.foundation:foundation:1.0.0-rc02'
    // Material Design
    api 'androidx.compose.material:material:1.0.0-rc02'
    // Material design icons
    api 'androidx.compose.material:material-icons-core:1.0.0-rc02'
    api 'androidx.compose.material:material-icons-extended:1.0.0-rc02'
    // Integration with activities
    api 'androidx.activity:activity-compose:1.3.0-rc02'
    // Integration with ViewModels
    api 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07'
    // Integration with observables
    api 'androidx.compose.runtime:runtime-livedata:1.0.0-rc02'
    api 'androidx.compose.runtime:runtime-rxjava2:1.0.0-rc02'

    // UI Tests
    androidTestApi 'androidx.compose.ui:ui-test-junit4:1.0.0-rc02'
    /**
     * ===============================ui end=============================
     */


}
