apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'
apply from: "${rootProject.getRootDir().getAbsolutePath()}/script/testlib.gradle"
def srcDirs = [
        "super-retrofit/retrofit/src",
        "super-retrofit/retrofit-adapters/rxjava3/src",
        "super-retrofit/retrofit-converters/gson/src",
        "super-retrofit/retrofit-converters/moshi/src",
        "super-retrofit/retrofit-converters/wire/src"

]
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.excludes = [
                    '**/build/**',
            ]
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/main/assets"
                aidl.srcDirs += "$projectDir/$it/main/aidl"
                res.srcDirs += "$projectDir/$it/main/res-frame-animation"
                res.srcDirs += "$projectDir/$it/main/res"
                java.srcDirs += "$projectDir/$it/main/java"
            }
            java {
                //${protobuf.generatedFilesBaseDir}：
                // /Users/hawks.jamesf/tech/Spacecraft/SpacecraftAndroid/network/build/generated/source/proto
                //protobuf
//                srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
                //wire
//                srcDirs += "src/main/wire"
                //gson
//                srcDirs += "src/main/gson"
            }
        }
        androidTest {
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/androidTest/assets"
                aidl.srcDirs += "$projectDir/$it/androidTest/aidl"
                res.srcDirs += "$projectDir/$it/androidTest/res"
                java.srcDirs += "$projectDir/$it/androidTest/java"
            }
        }
        test {
            srcDirs.forEach {
                java.srcDirs += "$projectDir/$it/test/java"
            }

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
//    println("getLocalIP--->${getLocalIP()}")
}

static String getLocalIP() {
    InetAddress result = null
    Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces()
    while (interfaces.hasMoreElements()) {
        Enumeration<InetAddress> addresses = interfaces.nextElement().getInetAddresses()
        while (addresses.hasMoreElements()) {
            InetAddress address = addresses.nextElement()
            if (!address.isLoopbackAddress()) {
                if (address.isSiteLocalAddress()) {
                    return address.getHostAddress()
                } else if (result == null) {
                    result = address
                }
            }
        }
    }
    return (result != null ? result : InetAddress.getLocalHost()).getHostAddress()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation files('libs/jsoup-1.12.1.jar')
    api project(path: ':framework:common')
    api project(path: ':mockserver')
    //    api 'com.squareup.okhttp3:okhttp:3.8.1'
    //    api 'com.android.volley:volley:1.1.1'
    api 'com.squareup.okhttp3:okhttp-tls:4.0.1'
    api 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    api "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"
    testImplementation 'com.squareup.okhttp3:okhttp-dnsoverhttps:4.0.1'
    /*
    >>>> http style  start
    */

    //restful
    api "com.squareup.retrofit2:retrofit:2.9.0"
//    api "com.squareup.retrofit2:retrofit-converters:2.8.1"
    api "com.squareup.retrofit2:adapter-rxjava3:2.9.0"
    api "com.squareup.retrofit2:converter-wire:2.9.0"
    api "com.squareup.retrofit2:converter-gson:2.9.0"
//    api "com.squareup.retrofit2:converter-moshi:2.9.0"
//    api "com.squareup.retrofit2:converter-protobuf:2.9.0"
    //rpc
    api("io.grpc:grpc-protobuf-lite:${rootProject.ext.grpcVersion}") {//存在依赖冲突
//        exclude group:  'com.google.guava'
//        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    api "io.grpc:grpc-okhttp:${rootProject.ext.grpcVersion}"
    api "io.grpc:grpc-stub:${rootProject.ext.grpcVersion}"

    /*
      http style  end
    */

    kapt "com.google.dagger:dagger-compiler:2.16"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "com.github.jnr:jnr-unixsocket:0.23"
    implementation 'com.google.android.gms:play-services-cronet:17.0.0'
}
