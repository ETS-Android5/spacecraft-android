apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'
apply from: "${rootProject.getRootDir().getAbsolutePath()}/script/testlib.gradle"

def srcDirs=[
        "printlogs",
]

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField('String', 'BASE_URL', '" https://www.easy-mock.com/mock/5ce10c941e436e14aceef040/"')

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.excludes = [
                    '**/build/**',
            ]
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/main/assets"
                aidl.srcDirs += "$projectDir/$it/main/aidl"
                res.srcDirs += "$projectDir/$it/main/res-frame-animation"
                res.srcDirs += "$projectDir/$it/main/res"
                java.srcDirs += "$projectDir/$it/main/java"
            }
        }
        androidTest {
            srcDirs.forEach {
                assets.srcDirs += "$projectDir/$it/androidTest/assets"
                aidl.srcDirs += "$projectDir/$it/androidTest/aidl"
                res.srcDirs += "$projectDir/$it/androidTest/res"
                java.srcDirs += "$projectDir/$it/androidTest/java"
            }
        }
        test {
            srcDirs.forEach {
                java.srcDirs += "$projectDir/$it/test/java"
            }

        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':common')
    api "com.squareup.okhttp3:mockwebserver:${rootProject.ext.okhttpVersion}"
    api "com.squareup.retrofit2:retrofit-mock:${rootProject.ext.retrofitVersion}"
}
