apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
//    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
//    implementation "com.android.support:design:${rootProject.ext.supportLibraryVersion}"
//    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
//    androidTestImplementation 'com.android.support.test:runner:1.0.1'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
//
//    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
//    implementation "com.squareup.retrofit2:retrofit-converters:${rootProject.ext.retrofitVersion}"
//    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
//    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofitVersion}"
//    implementation "com.squareup.retrofit2:retrofit-mock:${rootProject.ext.retrofitVersion}"
////    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
//    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okhttpLoggingVersion}"
//    implementation "com.squareup.okhttp3:mockwebserver:${rootProject.ext.okhttpVersion}"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation "com.blankj:utilcode:${rootProject.ext.utilcodeVersion}"
//    api "com.orhanobut:logger:${rootProject.ext.loggerVersion}"

    api project(path: ':common')
}
repositories {
    mavenCentral()
}
