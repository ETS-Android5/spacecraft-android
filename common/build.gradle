apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'

def srcDirs = [
        "carousel",
        "video",
        "colorpicker",
        "drawable",
        "animationsExprimental",
        "newLayoutExprimental",
        "scrollExprimental",
        "serialization",

]
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        component {
            initWith debug
            debuggable true
        }
    }
    sourceSets {
        main {
//            java.includes = srcDirs.collect { 'src/' + it + '/**/*.java' }
            java.excludes = [
                    '**/build/**',
            ]
            srcDirs.forEach {
                res.srcDirs += 'src/' + it + '/res'
                res.srcDirs += 'src/' + it + '/res-frame-animation'
                assets.srcDirs += 'src/' + it + '/assets'
                java.srcDirs += 'src/' + it + '/java'
                aidl.srcDirs += 'src/' + it + '/aidl'
            }
        }
//        main.java.srcDirs += ["src/main/kotlin"]
//
//        //carousel component
//        main.java.srcDirs += ["src/carousel/java"]
//        main.res.srcDirs += ["src/carousel/res"]
//        main.assets.srcDirs += ["src/carousel/assets"]
//
//        //video component
//        main.aidl.srcDirs += ["src/video/aidl"]
//        main.java.srcDirs += ["src/video/java"]
//        main.res.srcDirs += ["src/video/res"]
//        main.assets.srcDirs += ["src/video/assets"]
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api 'androidx.core:core-ktx:1.0.2'
    api 'androidx.multidex:multidex:2.0.1'
    api "com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0"
    api "io.reactivex.rxjava2:rxkotlin:2.2.0"
    //    api 'com.jakewharton.timber:timber:4.5.1'
    api "com.blankj:utilcode:1.24.2"
    api 'joda-time:joda-time:2.10'
    api 'com.googlecode.libphonenumber:libphonenumber:8.2.0'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"
    api "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxjavaVersion}"
    api "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroidVersion}"

    debugApi 'me.ele:uetool:1.0.17'
    releaseApi 'me.ele:uetool-no-op:1.0.17'
    // if you want to show more attrs about Fresco's DraweeView
//    debugApi 'me.ele:uetool-fresco:1.0.17'
    api 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'

    /**
     * ===============================mvvm start================================
     */
    annotationProcessor 'androidx.databinding:databinding-compiler:3.5.0-beta01'
    api 'com.github.markzhai:databinding-rv-adapter:1.0.1'
    // Lifecycles only (no ViewModel or LiveData)
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha01'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0-alpha01'
    //If you use Java 8 Language, then observe events with DefaultLifecycleObserver
//    api 'androidx.lifecycle:lifecycle-common-java8:2.1.0-alpha03'
//    api 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
//
//// If you want to bind to Android-specific lifecycles
//    api 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'
//
//// If you want pre-written Activities and Fragments you can subclass as providers
//    api 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'
//
//// If you want pre-written support preference Fragments you can subclass as providers
//    api 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.0.0'
//
//// If you want to use Android Lifecycle for providers
//    api 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.0.0'
//
//// If you want to use Kotlin syntax
//    api 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.0.0'
//
//// If you want to use Kotlin syntax with Android Lifecycle
//    api 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.0.0'
//
//// If you want to use Navi for providers
//// DEPRECATED: Use rxlifecycle-android-lifecycle instead. This will be removed in a future release.
//    api 'com.trello.rxlifecycle3:rxlifecycle-navi:3.0.0'
    /**
     * ===============================mvvm end================================
     */

    /**
     * ===============================decoupling start================================
     */
    api 'org.greenrobot:eventbus:3.1.1'
    // Dagger dependencies
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    api "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    api "com.google.dagger:dagger-android:$rootProject.ext.daggerVersion"
    api "com.google.dagger:dagger-android-support:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"
    /**
     * ===============================decoupling  end================================
     */

    /**
     * ===============================image start=============================
     */
    api "com.github.bumptech.glide:glide:${rootProject.ext.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.glideVersion}"
    /**
     * ===============================monitor end=============================
     */

    /**
     * ================================ui start=====================================
     */
    api "androidx.appcompat:appcompat:1.0.2"
    api "androidx.recyclerview:recyclerview:1.0.0"

    api 'android.arch.navigation:navigation-fragment:1.0.0'
    api 'android.arch.navigation:navigation-ui:1.0.0'
    api 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    api 'android.arch.navigation:navigation-ui-ktx:1.0.0'
    //layout
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'com.google.android:flexbox:1.1.0'
    //layout

    api 'androidx.palette:palette:1.0.0'
    /*
   *该库和`com.android.support:design:`都存在v4，编译时会报错：
   *com.android.build.api.transform.TransformException: java.util.zip.ZipException: duplicate entry: *android/support/v4/app/INotificationSideChannel$Stub$Proxy.class
   *解决方法：需要exclude掉v4包
    */
    api "com.google.android.material:material:1.1.0-alpha06"

    api 'com.airbnb.android:lottie:2.8.0'
    api 'androidx.vectordrawable:vectordrawable:1.1.0-beta01'
    /**
     * ================================ui end=====================================
     */

    /**
     * ===============================monitor start=============================
     */
    //crash and anr
    api 'com.tencent.bugly:nativecrashreport:3.3.1'
//    api 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    api 'com.tencent.bugly:crashreport:2.6.6.1'
    api "com.orhanobut:logger:${rootProject.ext.loggerVersion}"
    //memory leak
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.ext.leakcanaryVersion}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leakcanaryVersion}"
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:${rootProject.ext.leakcanaryVersion}"

    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-perf:16.2.5'
    implementation 'com.google.firebase:firebase-config:16.5.0'

    api 'com.facebook.stetho:stetho:1.5.1'
    api 'com.facebook.stetho:stetho-js-rhino:1.5.1'
    /**
     * ===============================monitor end=============================
     */

    /**
     * ===============================test start=============================
     */

    androidTestApi 'androidx.test.uiautomator:uiautomator-v18:2.2.0-alpha1'
    // Dependencies for local unit tests
//    testImplementation 'junit:junit:4.12'
//    testImplementation "org.mockito:mockito-all:1.10.19"
//    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
//    testImplementation "org.mockito:mockito-inline:${rootProject.ext.mockitoVersion}"
//    testImplementation "org.hamcrest:hamcrest-all:${rootProject.ext.hamcrestVersion}"

    // Espresso dependencies
    androidTestApi "androidx.test.espresso:espresso-core:3.1.1"
    androidTestApi "androidx.test.espresso:espresso-contrib:3.1.1"
    androidTestApi "androidx.test.espresso:espresso-intents:3.1.1"
    androidTestApi "androidx.test.espresso:espresso-accessibility:3.1.1"
    androidTestApi "androidx.test.espresso:espresso-web:3.1.1"
    androidTestApi "androidx.test.espresso.idling:idling-concurrent:3.1.1"
    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestApi "androidx.test.espresso:espresso-idling-resource:3.1.1"

    // Dependencies for Android unit tests
    androidTestApi "junit:junit:${rootProject.ext.junitVersion}"
    androidTestApi "org.mockito:mockito-android:${rootProject.ext.mockitoVersion}"
    androidTestApi 'com.google.dexmaker:dexmaker:1.2'
    androidTestApi 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Android Testing Support Library's runner and rules
    androidTestApi "androidx.test:runner:1.1.1"
    androidTestApi "androidx.test:rules:1.1.1"
    androidTestApi 'androidx.test:monitor:1.1.0'

    /**
     * ===============================test end=============================
     */

}
