apply plugin: 'com.android.application'
apply from: "${rootDir.path}/script/base_module.gradle"

apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.tencent.buglyplugin'
//bugly {
//    appId = '3d62251014'
//    appKey = 'a15ecf84-1786-40c6-abf5-fe975fce22e6'
//}
apply from: "${rootDir.path}/script/file_counter.gradle"
counterConfig {
    sea = 'all'
}

android {
    defaultConfig {
        multiDexEnabled = true//support android 20 or lower
//        multiDexKeepFile file('multiDexKeep.txt')
//        multiDexKeepProguard file('multiDexKeep.pro')
        applicationId rootProject.applicationId
        testApplicationId "${rootProject.applicationId}.test"
    }

    signingConfigs {
        debugSigningConfig {
            (keyAlias, keyPassword, storePassword) = ['123456', '123456', '123456']
            storeFile file("${rootDir}/keystore/debug.jks")
            v1SigningEnabled true
            v2SigningEnabled true

        }
        releaseSigningConfig {
            (keyAlias, keyPassword, storePassword) = ['123456', '123456', '123456']
            storeFile file("${rootDir}/keystore/debug.jks")
            v1SigningEnabled true
            v2SigningEnabled true
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigningConfig
            firebaseCrashlytics {
                nativeSymbolUploadEnabled false
                mappingFileUploadEnabled false
            }
            firebaseAppDistribution {
                releaseNotesFile = "/path/to/releasenotes.txt"
                testers = "hawksjamesf@gmail.com"
                serviceCredentialsFile = "${projectDir}/spacecraft-22dc1-e7362822612d.json"
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix = '.debug'
            signingConfig signingConfigs.debugSigningConfig
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }


    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', "arm64-v8a", 'armeabi', 'x86'
//            exclude "x86","x86_64"
            universalApk false
        }
    }
    packagingOptions {
        exclude 'META-INF/proguard/coroutines.pro'
    }
//    dexOptions {
//        preDexLibraries true
//        javaMaxHeapSize "8g"
//        maxProcessCount 8
//        dexInProcess = true
//    }
}
configurations {
    apkCheckerDependency
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
//    all*.exclude group: "com.google.protobuf", module: "protobuf-javalite"
}
dependencies {
    teenager("${project.path} app begin ========================================================================================")
    def deps = rootProject.ext.findDepProjects(project.path)
    for (def d : deps) {
        teenager("api  ${d}")
        api d
    }
    teenager("${project.path} app end ========================================================================================")
}