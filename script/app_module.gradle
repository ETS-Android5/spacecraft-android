apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'
//apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.tencent.buglyplugin'
apply from: "${rootDir.path}/script/console.gradle"
apply plugin: 'com.google.gms.google-services'
bugly {
    appId = '3d62251014'
    appKey = 'a15ecf84-1786-40c6-abf5-fe975fce22e6'
}
//apply plugin: 'com.jamesfchen.perfplugin'
apply plugin: 'com.jamesfchen.counterplugin'
counterConfig {
    seaSrcDirs = true
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        (minSdkVersion, targetSdkVersion, versionCode, versionName) = [rootProject.ext.minSdkVersion, rootProject.ext.targetSdkVersion, rootProject.ext.versionCode, rootProject.ext.versionName]

        multiDexEnabled = true//support android 20 or lower
//        multiDexKeepFile file('multiDexKeepFile.txt')
//        multiDexKeepProguard file('multiDexKeep.pro')
        applicationId "com.hawksjamesf.spacecraft"
        testApplicationId "com.hawksjamesf.spacecraft.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debugSigningConfig {
            (keyAlias, keyPassword, storePassword) = ['123456', '123456', '123456']
            storeFile file("${rootDir}/keystore/debug.jks")
            v1SigningEnabled true
            v2SigningEnabled true

        }
        releaseSigningConfig {
            (keyAlias, keyPassword, storePassword) = ['123456', '123456', '123456']
            storeFile file("${rootDir}/keystore/debug.jks")
            v1SigningEnabled true
            v2SigningEnabled true
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigningConfig
            firebaseCrashlytics {
                nativeSymbolUploadEnabled false
                mappingFileUploadEnabled false
            }
            firebaseAppDistribution {
                releaseNotesFile = "/path/to/releasenotes.txt"
                testers = "hawksjamesf@gmail.com"
                serviceCredentialsFile = "${projectDir}/spacecraft-22dc1-e7362822612d.json"
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix = '.debug'
            signingConfig signingConfigs.debugSigningConfig
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        lintConfig project.file("$project.rootDir/lint.xml")
        htmlReport true
        htmlOutput project.file("$project.rootDir/lint-report-app.html")
        xmlReport true
        xmlOutput project.file("$project.rootDir/lint-report-app.xml")
        warningsAsErrors true
        abortOnError false
        checkReleaseBuilds false
        //        textReport true
//        // Produce report for CI:
//        // https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/sarif-support-for-code-scanning
//        sarifOutput project.file("$project.rootDir/lint-results.sarif")
//                // Turns off checks for the issue IDs you specify.
//                disable 'TypographyFractions','TypographyQuotes'
//                // Turns on checks for the issue IDs you specify. These checks are in
//                // addition to the default lint checks.
//                enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
//                // To enable checks for only a subset of issue IDs and ignore all others,
//                // list the issue IDs with the 'check' property instead. This property overrides
//                // any issue IDs you enable or disable using the properties above.
//                checkOnly 'NewApi', 'InlinedApi'
//                // If set to true, turns off analysis progress reporting by lint.
//                quiet true
//                // if set to true (default), stops the build if errors are found.
//                abortOnError false
//                // if true, only report errors.
//                ignoreWarnings true
    }

    //    buildFeatures {
//        viewBinding true
//    }
    //    buildFeatures {
//        dataBinding true
//    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', "arm64-v8a", 'armeabi', 'x86'
//            exclude "x86","x86_64"
            universalApk false
        }
    }
    packagingOptions {
        exclude 'META-INF/proguard/coroutines.pro'
    }
//    dexOptions {
//        preDexLibraries true
//        javaMaxHeapSize "8g"
//        maxProcessCount 8
//        dexInProcess = true
//    }
}
configurations {
    apkCheckerDependency
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
//    all*.exclude group: "com.google.protobuf", module: "protobuf-javalite"
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    teenager("${project.path} app begin ========================================================================================")
    def deps = rootProject.ext.findDepProjects(project.path)
    for (def d : deps) {
        teenager("api  ${d}")
        api d
    }
    teenager("${project.path} app end ========================================================================================")
}